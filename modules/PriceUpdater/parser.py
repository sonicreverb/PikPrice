import requests
import re
from bs4 import BeautifulSoup


# –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç html (reguest.get) —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ url'a
def get_html(url):
    r = requests.get(url, verify=False)
    return r


# –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –Ω–∞ –≤—Ö–æ–¥ html –∏ —Ç–∏–ø —Å–∞–π—Ç–∞, –ø–∞—Ä—Å–∏—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ü–µ–Ω—É –ø–æ–∑–∏—Ü–∏–∏
def get_price(html, site_type):
    soup = BeautifulSoup(html, 'html.parser')

    if site_type == 'store77':
        soup = BeautifulSoup(html, 'html.parser')
        split_price = soup.find('p', class_='price_title_product').get_text().split()
        price = ''
        for tmp in range(len(split_price) - 1):
            price = price + split_price[tmp]
        return price

    elif site_type == 'sotohit':
        price = soup.find('div', class_='price-current').get_text()[1:-3]
        return price

    elif site_type == 'gsm':
        split_price = soup.find('span', class_='product-price js-product-price').get_text().split()
        price = ''
        for tmp in range(len(split_price) - 1):
            price = price + split_price[tmp]
        return price


# –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –Ω–∞ –≤—Ö–æ–¥ url —Ç–æ–≤–∞—Ä–∞ –∏ —Ç–∏–ø —Å–∞–π—Ç–∞, –ø–æ–ª—É—á–∞–µ—Ç html, –≤—ã–∑—ã–≤–∞–µ—Ç get_price() –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ü–µ–Ω—É –ø–æ–∑–∏—Ü–∏–∏
def parse_price(url, site_type):
    html = get_html(url)
    if html.status_code == 200:
        try:
            result = get_price(html.text, site_type)
            print(f"[{site_type.upper()}] {url} - {result}")
            if result == '':
                return 'none'
            return result
        except AttributeError:
            print('AttributeError in parser.py line 33', url)
            return 'error'

    else:
        print(f'[{site_type.upper()}] Warning HTMl status code 418 parser.py line 30 {url}')
        return 'invalid url'


# —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –≤—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ (–ø—Ä–∞–π—Å-–ª–∏—Å—Ç—ã) –∏–∑ —Ç–µ–ª–µ–≥—Ä–∞–º–º –∫–∞–Ω–∞–ª–æ–≤ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª–æ–≤–∞—Ä—å —Å –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ–º —Ç–æ–≤–∞—Ä–∞[—Ü–µ–Ω–∞ —Ç–æ–≤–∞—Ä–∞]
def format_inputprice(textinput):
    # —Ä–∞–∑–¥–µ–ª—è–µ–º —Å–ø–ª–æ—à–Ω–æ–π —Ç–µ–∫—Å—Ç –Ω–∞ —Å—Ç—Ä–æ–∫–∏ (–∫–∞–∂–¥–∞—è —Å—Ç—Ä–æ–∫–∞ - –æ–¥–∏–Ω —Ç–æ–≤–∞—Ä), –∑–∞–ø–æ–ª–Ω—è–µ–º –∏–º –º–∞—Å—Å–∏–≤
    text_lines_li = textinput.split('\n')
    # –µ—Å–ª–∏ –≤ —Å—Ç—Ä–æ–∫–µ –±—É–¥—É—Ç —ç—Ç–∏ —ç–º–æ–¥–∑–∏, –∑–Ω–∞—á–∏—Ç —ç—Ç–∞ —Å—Ç—Ä–æ–∫–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–æ–≤–∞—Ä
    emojiflag_li = ['üáÆüá≥', 'üá™üá∫', 'üá¨üáß', 'üá∫üá∏', 'üáØüáµ', 'üá∑üá∫', 'üá¶üá™', 'üá≠üá∞', 'üá∞üáø', 'üá∞üá∑', 'üì∫', 'üéÆ', 'üîå', 'üîã', 'üñ±']
    name_spc_dict = {}

    for line in text_lines_li:
        for emoji_flag in emojiflag_li:
            if emoji_flag in line:
                try:
                    price = re.search(r'\d{4,6}', line)[0]
                    name = line.split()
                    name = ''.join(name)

                    # –ø—Ä–∏ –ø–æ–º–æ—â–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞—Ö–æ–¥–∏–º, –∫–∞–∫ –≤ —Å—Ç—Ä–æ–∫–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫ —Ä–∞–∑–¥–µ–ª–∏–ª –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ —Ü–µ–Ω—É, —á—Ç–æ–±—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ –µ—ë
                    # —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å
                    if name[0:name.index('-')]:
                        name_spc = name[0:name.index('-')].upper()
                    elif name[0:name.index('.')]:
                        name_spc = name[0:name.index('.')].upper()
                    else:
                        continue

                    if name_spc in name_spc_dict:
                        if price < name_spc_dict[name_spc]:
                            name_spc_dict[name_spc] = price
                    else:
                        name_spc_dict[name_spc] = price

                except AttributeError:
                    print("AttributeError in try statement, parser.py; format_input_price()", line)
                except TypeError:
                    print("TypeError in try statement, parser.py; format_input_price()", line)

    return name_spc_dict
